---
swagger: "2.0"
info:
  description: "This is an API for a library project that will be used in our SLO\
    \ course."
  version: "v0.0.1"
  title: "Library API Spec"
schemes:
- "http"
- "https"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /v1/book:
    get:
      tags:
      - "Book"
      operationId: "list_books"
      parameters: []
      responses:
        "200":
          description: "A successful response and a list of books is returned."
          schema:
            $ref: "#/definitions/ListBooksResponse"
      x-swagger-router-controller: "swagger_server.controllers.book_controller"
    post:
      tags:
      - "Book"
      operationId: "create_book"
      parameters:
      - in: "body"
        name: "book"
        required: true
        schema:
          $ref: "#/definitions/CreateBookRequest"
        x-exportParamName: "Book"
      responses:
        "200":
          description: "A successful response and a book is created."
          schema:
            $ref: "#/definitions/CreateBookResponse"
        "403":
          description: "Another book with the same ID exists."
          schema:
            $ref: "#/definitions/CreateBookResponse"
      x-swagger-router-controller: "swagger_server.controllers.book_controller"
  /v1/book/{bookID}:
    get:
      tags:
      - "Book"
      operationId: "get_book_by_id"
      parameters:
      - name: "bookID"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "bookID"
      responses:
        "200":
          description: "A successful response with the book details."
          schema:
            $ref: "#/definitions/GetBookByIdResponse"
        "404":
          description: "Book not found."
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "swagger_server.controllers.book_controller"
    put:
      tags:
      - "Book"
      operationId: "update_book"
      parameters:
      - name: "bookID"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "bookID"
      - in: "body"
        name: "book"
        required: true
        schema:
          $ref: "#/definitions/UpdateBookRequest"
        x-exportParamName: "Book"
      responses:
        "200":
          description: "Book updated successfully."
          schema:
            $ref: "#/definitions/UpdateBookResponse"
        "404":
          description: "Book not found."
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "swagger_server.controllers.book_controller"
    delete:
      tags:
      - "Book"
      operationId: "delete_book"
      parameters:
      - name: "bookID"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "bookID"
      responses:
        "200":
          description: "A successful response and the book is deleted."
          schema:
            $ref: "#/definitions/DeleteBookResponse"
      x-swagger-router-controller: "swagger_server.controllers.book_controller"
definitions:
  CreateBookRequest:
    type: "object"
    required:
    - "bookAuthor"
    - "bookID"
    - "bookTitle"
    properties:
      bookID:
        type: "string"
      bookDescription:
        type: "string"
      bookTitle:
        type: "string"
      bookAuthor:
        type: "string"
    example:
      bookID: "12345"
      bookTitle: "Effective Swagger"
      bookAuthor: "Jane Doe"
      bookDescription: "A comprehensive guide to Swagger."
  CreateBookResponse:
    type: "object"
    required:
    - "message"
    - "status"
    properties:
      status:
        type: "string"
      message:
        type: "string"
    example:
      status: "success"
      message: "Book created successfully."
  ListBooksResponse:
    type: "array"
    items:
      $ref: "#/definitions/Book"
  Book:
    type: "object"
    required:
    - "bookAuthor"
    - "bookID"
    - "bookTitle"
    properties:
      bookID:
        type: "string"
      bookDescription:
        type: "string"
      bookTitle:
        type: "string"
      bookAuthor:
        type: "string"
    example:
      bookID: "12345"
      bookTitle: "Effective Swagger"
      bookAuthor: "Jane Doe"
      bookDescription: "A comprehensive guide to Swagger."
  DeleteBookResponse:
    type: "object"
    required:
    - "message"
    - "status"
    properties:
      status:
        type: "string"
      message:
        type: "string"
    example:
      status: "success"
      message: "Book deleted successfully."
  GetBookByIdResponse:
    type: "object"
    required:
    - "book"
    - "message"
    - "status"
    properties:
      status:
        type: "string"
      message:
        type: "string"
      book:
        $ref: "#/definitions/Book"
    example:
      status: "success"
      message: "Book retrieved successfully."
      book:
        bookID: "12345"
        bookTitle: "Effective Swagger"
        bookAuthor: "Jane Doe"
        bookDescription: "A comprehensive guide to Swagger."
  UpdateBookRequest:
    type: "object"
    properties:
      bookDescription:
        type: "string"
      bookTitle:
        type: "string"
      bookAuthor:
        type: "string"
    example:
      bookTitle: "Advanced Swagger"
      bookAuthor: "Jane Doe"
      bookDescription: "An advanced guide to Swagger."
  UpdateBookResponse:
    type: "object"
    required:
    - "message"
    - "status"
    properties:
      status:
        type: "string"
      message:
        type: "string"
    example:
      status: "success"
      message: "Book updated successfully."
  ErrorResponse:
    type: "object"
    required:
    - "message"
    - "status"
    properties:
      status:
        type: "string"
      message:
        type: "string"
    example:
      status: "error"
      message: "Book not found."
